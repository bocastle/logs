name: Sync Markdown from Dropbox

on:
  schedule:
    - cron: "0 0 * * *" # 한국시간 오전 9시
    - cron: "0 2 * * *" # 한국시간 오전 11시
    - cron: "0 4 * * *" # 한국시간 오후 1시
  workflow_dispatch:

jobs:
  sync-md-file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git config
        run: |
          git config --global user.name "김보성"
          git config --global user.email "bocastle1213@gmail.com"

      - name: Calculate today's date and hour
        id: time
        run: |
          echo "DATE=$(date +'%Y_%m_%d')" >> $GITHUB_ENV

      - name: Download Markdown file from Dropbox
        env:
          DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
          DATE: ${{ env.date }}
        run: |
          echo "Checking Dropbox for /Apps/bocelog/$DATE"
           response=$(curl -s -X POST https://api.dropboxapi.com/2/files/list_folder \
            --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
            --header "Content-Type: application/json" \
            --data "{\"path\": \"/모든파일/앱/bocelog/$DATE\"}")

          echo "API Response: $response"
            if [ "$response" != "null" ] && [ ! -z "$response" ]; then
              FILE_LIST=$(echo "$response" | jq -r '.entries[].name')
              echo "Files found: $FILE_LIST"
            else
              echo "No files found or API error."
              exit 0
            fi

          # Dropbox에서 해당 날짜 파일 목록 가져오기
            FILE_LIST=$(curl -X POST https://api.dropboxapi.com/2/files/list_folder \
          --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
          --header "Content-Type: application/json" \
          --data "{\"path\": \"/Apps/bocelog/$DATE\"}" | jq -r '.entries[].name')

          # 파일 목록을 순회하며 조건에 맞는 파일 찾기
            for FILE in $FILE_LIST; do
              if [[ $FILE =~ ^JavaScript_.*_${DATE}_.+\.md$ ]]; then
                echo "Found file: $FILE"
                # Dropbox에서 파일 다운로드
                curl -X POST https://content.dropboxapi.com/2/files/download \
                  --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
                  --header "Dropbox-API-Arg: {\"path\": \"/모든파일/앱/bocelog/$DATE/$FILE\"}" \
                  --output temp.md

                # 카테고리와 제목 추출 (파일명으로부터)
                CATEGORY=$(echo $FILE | cut -d'_' -f1)
                TITLE=$(echo $FILE | cut -d'_' -f2- | sed 's/.md//')

                # 폴더에 파일을 이동시키고 Git에 추가
                if [ -f temp.md ]; then
                  mkdir -p $CATEGORY
                  mv temp.md $CATEGORY/$TITLE.md
                  git add $CATEGORY/$TITLE.md
                fi
              fi
            done

      - name: Commit and Push if file exists
        run: |
          if [ -f temp.md ]; then
            # 동적으로 카테고리와 제목 추출
            CATEGORY=$(echo $FILE | cut -d'_' -f1)   # 파일명에서 카테고리 추출 (예: JavaScript)
            TITLE=$(echo $FILE | cut -d'_' -f2-)    # 파일명에서 제목 추출 (예: 약수의 개수 구하기)
            
            # 폴더 구조에 맞춰서 파일을 이동
            mkdir -p $CATEGORY
            mv temp.md $CATEGORY/$TITLE.md
            git add $CATEGORY/$TITLE.md
            git commit -m "Auto-sync: $TITLE.md" || echo "No changes to commit"
            git push origin main
          else
            echo "No file downloaded, skipping commit."
          fi
