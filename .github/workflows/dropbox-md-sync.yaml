name: Sync Markdown from Dropbox

on:
  schedule:
    - cron: "0 12 * * *" # UTC 기준으로 오후 9시 (한국시간)
  workflow_dispatch:

jobs:
  sync-md-file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git config
        run: |
          git config --global user.name "your-username"
          git config --global user.email "your-email@example.com"

      - name: Calculate today's date
        id: time
        run: |
          echo "DATE=$(date +'%Y_%m_%d')" >> $GITHUB_ENV

      - name: Download Markdown files from Dropbox
        env:
          DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
          DATE: ${{ env.DATE }}
        run: |
          # Dropbox에서 해당 날짜 파일 목록 가져오기
          FILE_LIST=$(curl -X POST https://api.dropboxapi.com/2/files/list_folder \
            --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
            --header "Content-Type: application/json" \
            --data "{\"path\": \"/$DATE\"}" | jq -r '.entries[].name')

          # 파일 목록을 순회하며 조건에 맞는 파일 찾기
          for FILE in $FILE_LIST; do
            if [[ $FILE =~ ^.*_${DATE}_.+\.md$ ]]; then
              echo "Found file: $FILE"
              # Dropbox에서 파일 다운로드
              curl -X POST https://content.dropboxapi.com/2/files/download \
                --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
                --header "Dropbox-API-Arg: {\"path\": \"/$DATE/$FILE\"}" \
                --output temp.md

              # 카테고리와 제목 추출 (파일명으로부터)
              CATEGORY=$(echo $FILE | cut -d'_' -f1)  # JavaScript, Go 등
              TITLE=$(echo $FILE | cut -d'_' -f2- | sed 's/.md//')  # 약수의 개수 구하기 등

              # 폴더에 파일을 이동시키고 Git에 추가
              if [ -f temp.md ]; then
                mkdir -p $CATEGORY
                mv temp.md $CATEGORY/$TITLE.md
                git add $CATEGORY/$TITLE.md
              fi
            fi
          done

      - name: Commit and Push if files exist
        run: |
          if git diff --cached --exit-code; then
            echo "No changes to commit"
          else
            git commit -m "Auto-sync: Updated Markdown files"
            git push origin main
          fi
