# 워크플로우 이름 정의
name: Sync Markdown from Dropbox V2

# 워크플로우 실행 조건 설정
on:
  # 매일 한국시간 오후 9시에 실행
  # UTC 12:00 = KST 21:00 (UTC+9)
  schedule:
    - cron: "0 12 * * *"
  # 수동으로도 실행 가능하도록 설정
  workflow_dispatch:

# 작업 정의
jobs:
  sync-md-file:
    # Ubuntu 최신 버전에서 실행
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Git 설정
      - name: Set up Git config
        run: |
          echo "Setting up Git config..."
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          echo "Git config setup completed"

      # 3. 오늘 날짜 계산 (YYYY_MM_DD 형식)
      - name: Calculate today's date
        id: time
        run: |
          echo "Calculating today's date..."
          # Set timezone to Asia/Seoul
          export TZ='Asia/Seoul'
          # Get current date in YYYY_MM_DD format
          TODAY=$(date +'%Y_%m_%d')
          echo "Current timezone: $TZ"
          echo "Calculated date: $TODAY"
          # Set the date in GitHub environment
          echo "DATE=$TODAY" >> $GITHUB_ENV
          # Verify the date was set correctly
          echo "Date set to: $TODAY"
          # Double check the date
          if [ "$TODAY" != "$(date +'%Y_%m_%d')" ]; then
            echo "Error: Date mismatch. Expected $TODAY but got $(date +'%Y_%m_%d')"
            exit 1
          fi

      # 4. 토큰 갱신
      - name: Get Dropbox Access Token
        env:
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
        run: |
          echo "Requesting Dropbox access token..."
          client_credentials=$(echo -n "$DROPBOX_APP_KEY:$DROPBOX_APP_SECRET" | base64)

          temp_file=$(mktemp)
          http_code=$(curl -s -w "%{http_code}" -X POST https://api.dropbox.com/oauth2/token \
            -H "Authorization: Basic $client_credentials" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=refresh_token" \
            -d "refresh_token=$DROPBOX_REFRESH_TOKEN" \
            -o "$temp_file")

          response_body=$(cat "$temp_file")
          rm "$temp_file"

          if [ "$http_code" != "200" ]; then
            echo "Error: Failed to get token. HTTP $http_code"
            echo "Response body: $response_body"
            exit 1
          fi

          token=$(echo "$response_body" | jq -r '.access_token')
          if [ -z "$token" ]; then
            echo "Error: access_token is empty"
            exit 1
          fi

          echo "Access token obtained: [REDACTED]"
          echo "DROPBOX_ACCESS_TOKEN=$token" >> $GITHUB_ENV

      # 토큰 확인
      - name: Use Dropbox Access Token to List Files
        run: |
          echo "DROPBOX_ACCESS_TOKEN=$DROPBOX_ACCESS_TOKEN"
          echo "Listing files from Dropbox... $DATE"

          # Dropbox에서 파일 목록 조회
          temp_file=$(mktemp)
          response=$(curl -s -w "\n%{http_code}" -X POST https://api.dropboxapi.com/2/files/list_folder \
            --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
            --header "Content-Type: application/json" \
            --data "{\"path\": \"/$DATE\"}" \
            -o "$temp_file")

          http_code=$(echo "$response" | tail -n1)
          response_body=$(cat "$temp_file")
          rm "$temp_file"

          echo "HTTP status: $http_code"
          echo "Dropbox response: $response_body"

          if [ "$http_code" != "200" ]; then
            echo "Failed to list Dropbox folder: HTTP $http_code"
            exit 1
          fi

          # Check if response is empty
          if [ -z "$response_body" ]; then
            echo "No folder found for date $DATE in Dropbox"
            echo "This is normal if no files were uploaded for this date"
            exit 0
          fi

          # Token expired check (error 401)
          if [[ "$response_body" == *"error"* && "$response_body" == *"401"* ]]; then
            echo "Token expired, refreshing..."
            DROPBOX_ACCESS_TOKEN=$(get_access_token) || {
              echo "Error: Failed to refresh token during file listing"
              exit 1
            }

            # Retry the list_folder request with refreshed token
            response_body=$(curl -s -X POST https://api.dropboxapi.com/2/files/list_folder \
              --header "Authorization: Bearer $DROPBOX_ACCESS_TOKEN" \
              --header "Content-Type: application/json" \
              --data "{\"path\": \"/$DATE\"}")

            echo "API Response after token refresh: $response_body"
          fi

          echo "Final Response body: $response_body"
